# Copyright (c) 2021 Andrew Archibald
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.

# Bitwise tests borrowed from Go
# https://golang.org/src/math/big/int_test.go#L1193

call 0      0      test_bitwise
call 0      1      test_bitwise
call 1      0      test_bitwise
call -1     0      test_bitwise
call -175   -80    test_bitwise
call 0      -1     test_bitwise
call 1      1      test_bitwise
call -1     -1     test_bitwise
call 7      8      test_bitwise
call 5      15     test_bitwise
call 255    -10    test_bitwise
call 81910  39502  test_bitwise
call -81910 39502  test_bitwise
call -81910 -39502 test_bitwise

push 340282566926938463463474637401768211457
push 298472983472983471903246121093472394872319615612417471234712061
call test_bitwise

push 340282566926938463463474637401768211457
push -298472983472983471903246121093472394872319615612417471234712061
call test_bitwise

push -340282566926938463463474637401768211457
push -298472983472983471903246121093472394872319615612417471234712061
call test_bitwise

call 0      test_not
call 1      test_not
call 7      test_not
call 0      test_not
call -81910 test_not
call 298472983472983471903246121093472394872319615612417471234712061 test_not

end

# (x y -- )
test_bitwise:
    printc 'x' printc ' ' printi ^1 printc '\n'
    printc 'y' printc ' ' printi ^ printc '\n'

    printc 'x' printc '&' printc 'y' printc ' '
    copy 1 copy 1 call and printi printc '\n'

    printc 'x' printc '|' printc 'y' printc ' '
    copy 1 copy 1 call or printi printc '\n'

    printc 'x' printc '^' printc 'y' printc ' '
    copy 1 copy 1 call xor printi printc '\n'

    printc 'x' printc '&' printc '^' printc 'y' printc ' '
    copy 1 copy 1 call andnot printi printc '\n'

    printc '\n'

    drop 2
    ret

# (x -- )
test_not:
    printc 'x' printc ' ' printi ^ printc '\n'
    printc '-' printc 'x' printc ' '
    call not printi printc '\n' printc '\n'
    ret
