#!/bin/bash -e
# Copyright (c) 2021 Andrew Archibald
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.

[ $# -ne 2 ] && echo "usage: ${0##*/} <file> <out_file>" >&2 && exit 2
prog="$1"
out="$2"

WSLIB="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"

gsed -Ef "$WSLIB"/wsf.sed "$prog" > "$out"
final_inst=$(awk '/./{line=$0} END{print line}' "$out")
if ! grep -Eq '^(call|jmp|j[zn]) |^(ret|exit)$' <<< "$final_inst"; then
  echo "$out: Program does not end with a control flow instruction: $final_inst" >&2
  exit 1
fi

imports=()
in_imports() {
  local import
  for import in "${imports[@]}"; do
    [ "$import" = "$1" ] && return 0
  done
  return 1
}

resolve_import() {
  local file="$1"
  local import="$2"
  if [ -e "$import.wsf" ]; then
    if [ -d "$import.wsf" ]; then
      echo "$file: Unable to resolve import: $import.wsf is a directory"
      return 1
    fi
    if [ -d "$import" ]; then
      echo "$file: Unable to resolve import: both $import.wsf and $import/ exit"
      return 1
    fi
    echo "$import.wsf"
    return 0
  elif [ -e "$import/module.wsf" ]; then
    if [ -d "$import/module.wsf" ]; then
      echo "$file: Unable to resolve import: $import/module.wsf is a directory"
      return 1
    fi
    echo "$import/module.wsf"
    return 0
  else
    echo "$file: Unable to resolve import: $import"
    return 1
  fi
}

get_imports() {
  local file="$1"
  local module="$2"
  imports=("${imports[@]}" "$module:$file")
  local import
  while read -r import; do
    local import_module
    case "$import" in
      import:*) import="${import#import:}"; import_module="$import" ;;
      export:*) import="${import#export:}"; import_module="$file" ;;
    esac
    import_module="${import_module%/module.wsf}"
    import_module="${import_module##*/}"
    import_module="${import_module%.wsf}"

    local import_file
    if ! import_file="$(resolve_import "$file" "$import")"; then
      local local_fail="$import_file"
      if ! import_file="$(resolve_import "$file" "$WSLIB/$import")"; then
        echo "$local_fail" >&2
        echo "$import_file" >&2
        exit 1
      fi
    fi
    if ! in_imports "$import_module:$import_file"; then
      get_imports "$import_file" "$import_module"
    fi
  done < <(gsed -En '
    s/(^|\s)"([^"]+)"\s+import\b/import:\2/p
    s/(^|\s)"([^"]+)"\s+export\b/export:\2/p
  ' "$file")
}

get_imports "$prog" ''

for import in "${imports[@]:1}"; do
  module="${import%%:*}"
  import_file="${import#*:}"
  gsed -E "
    s/\b(call|jmp|j[zn=<>]|j[<>]=|jeof)\s+(\.?)([A-za-z0-9_-]+)( |$)/\1 \2$module.\3\4/
    s/\b(\.?)([A-za-z0-9_-]+:)( |$)/\1$module.\2\3/
  " "$import_file"
done | gsed -Ef "$WSLIB"/wsf.sed >> "$out"
